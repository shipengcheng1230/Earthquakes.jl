# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  batch: true
  branches:
    include:
    - master
    - staging
    - trying

jobs:

# - job: Linux
#   pool:
#     vmImage: 'Ubuntu 16.04'
#   strategy:
#     matrix:
#       Julia 1.1:
#         JULIA_VERSION: '1.1.1'
#   steps:
#   - script: |
#       wget -nv https://julialang-s3.julialang.org/bin/linux/x64/1.1/julia-$(JULIA_VERSION)-linux-x86_64.tar.gz
#       tar zxf julia-$(JULIA_VERSION)-linux-x86_64.tar.gz
#     displayName: 'Install Julia'
#   - script: |
#       sudo apt-get update
#       sudo apt-get install -y libgfortran3 libglu1 libxcursor1 libxrender1 libxft2 libxinerama1
#     displayName: 'Install dependencies for libgmsh'
#   - script: |
#       ./julia-$(JULIA_VERSION)/bin/julia --project=@. -e 'using InteractiveUtils; versioninfo()'
#       ./julia-$(JULIA_VERSION)/bin/julia --project=@. -e 'using Pkg; Pkg.instantiate()'
#       ./julia-$(JULIA_VERSION)/bin/julia --project=@. -e 'using Pkg; Pkg.test("Quaycle")'
#     displayName: 'Run the tests'
#
# - job: macOS
#   pool:
#     vmImage: 'macOS-10.13'
#   strategy:
#     matrix:
#       Julia 1.1:
#         JULIA_VERSION: '1.1.1'
#         JULIA_VERSION_SHORT: '1.1'
#   steps:
#   - script: |
#       wget -nv https://julialang-s3.julialang.org/bin/mac/x64/1.1/julia-$(JULIA_VERSION)-mac64.dmg
#       hdiutil attach julia-$(JULIA_VERSION)-mac64.dmg
#       ln -s /Volumes/Julia-$(JULIA_VERSION)/Julia-$(JULIA_VERSION_SHORT).app/Contents/Resources/julia/bin/julia
#     displayName: 'Install Julia'
#   - script: |
#       ./julia --project=@. -e 'using InteractiveUtils;versioninfo()'
#       ./julia --project=@. -e 'using Pkg; Pkg.instantiate()'
#       ./julia --project=@. -e 'using Pkg; Pkg.test("Quaycle")'
#     displayName: 'Run the tests'

- job: Windows

  timeoutInMinutes: 0

  pool:
    vmImage: 'VS2017-Win2016'

  strategy:
    matrix:
      Julia 1.3:
        JULIA_VERSION: '1.4'

  steps:
  - powershell: |
      Set-PSDebug -Trace 1
      wget https://julialang-s3.julialang.org/bin/winnt/x64/$(JULIA_VERSION)/julia-$(JULIA_VERSION)-latest-win64.exe -OutFile julia-$(JULIA_VERSION)-latest-win64.exe
      Start-Process -FilePath .\julia-$(JULIA_VERSION)-latest-win64.exe -ArgumentList "/S /D=C:\julia-$(JULIA_VERSION)" -NoNewWindow -Wait
    displayName: 'Download and extract Julia'
  - powershell: |
      Set-PSDebug -Trace 1
      C:\julia-$(JULIA_VERSION)\bin\julia.exe -e 'using InteractiveUtils; versioninfo()'
      C:\julia-$(JULIA_VERSION)\bin\julia.exe --project=@. -e 'using Pkg; Pkg.instantiate()'
      C:\julia-$(JULIA_VERSION)\bin\julia.exe --project=@. -e 'using Pkg; Pkg.test()'
    displayName: 'Run the tests'
